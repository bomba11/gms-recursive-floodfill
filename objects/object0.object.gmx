<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///README

/*
    Flood FIll Algorithm in GameMaker: Studio
    
    Zack Banack
        http://zackbanack.com/
        @zackbanack
    
    May 29, 2017
        v21.0
    
    Associated Tutorial/Walkthrough
        http://zackbanack.com/blog/floodfill
        
    End User License Agreement (EULA)
        http://zackbanack.com/EULA
        
    Notes
        - This asset was created for GameMaker: Studio, so non-documented adjustments may be required to get it working with GameMaker: Studio 2.
        - Because this is a free asset, support will be limited.
*/

arr = ds_grid_create(45, 45); // init 45x45 grid
cell_width = 10; // width of each grid cell
cell_height = 10; // height of each grid cell
xpos = 32; // x-coordinate of the top-left cell in the room
ypos = 32; // y-coordinate of the top-left cell in the room
flood_color = c_lime; // color to flood the board

// cycle through all the cells in the grid and make them either white or black
for (var i = 0; i &lt; ds_grid_width(arr); i++) {
    for (var j = 0; j &lt; ds_grid_height(arr); j++) {
        ds_grid_set(arr, i, j, choose(c_white, c_black));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// cycle through all the cells in the grid
for (var i = 0; i &lt; ds_grid_width(arr); i++) {
    for (var j = 0; j &lt; ds_grid_height(arr); j++) {
        var x1, y1, x2, y2; // temporary variables for top-left and bottom-right coordinates of each cell
        x1 = xpos + (i * cell_width);
        y1 = ypos + (j * cell_height);
        x2 = x1 + cell_width;
        y2 = y1 + cell_height;

        // draw rectangle at the given coordinates based on the color of the cell
        draw_set_color(ds_grid_get(arr, i, j));
        draw_rectangle(x1, y1, x2, y2, false);

        // if mouse button is pressed and the cursor is in the cell
        if (mouse_check_button_pressed(mb_left) &amp;&amp; point_in_rectangle(mouse_x, mouse_y, x1, y1, x2, y2)) {
            if (ds_grid_get(arr, i, j) != flood_color) { // ensure the color if the cell is not already the flood color
                floodfill(i, j, flood_color, ds_grid_get(arr, i, j)); // call the algorithm
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
